#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    //新增複數按鍵的組合
    combos
    {
        compatible = "zmk,combos";
        //組合按鍵名稱
        combo_bt{
            //按鍵組合的延遲(在幾秒內必須按下這兩個按鍵)
            timeout-ms = <50>;
            //按鍵陣列的組合Q+T
            key-positions = <0 4>;
            bindings = <&out OUT_TOG>;
        };

        combo_grave{
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp GRAVE>;
        };

        combo_minus{
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp MINUS>;
        };

        combo_equal{
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp EQUAL>;
        };

        combo_enter{
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&kp RETURN>;
        };

        combo_backspace{
            timeout-ms = <50>;
            key-positions = <18 19>;
            bindings = <&kp BACKSPACE>;
            layers = <0>;
        };

        combo_delete{
            timeout-ms = <50>;
            key-positions = <18 19>;
            bindings = <&kp DELETE>;
            layers = <1>;
        };
        
        combo_comma{
            timeout-ms = <50>;
            key-positions = <36 37>;
            bindings = <&kp COMMA>;
            layers = <0>;
        };

        // combo_underscore{
        //     timeout-ms = <50>;
        //     key-positions = <38 39>;
        //     bindings = <&kp UNDERSCORE>;
        //     layers = <0>;
        // };

        combo_esc{
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp ESC>;
            layers = <0>;
        };

        combo_tab{
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp TAB>;
            layers = <0>;
        };
        
        combo_page_up{
            timeout-ms = <50>;
            key-positions = <38 49>;
            bindings = <&kp PAGE_UP>;
            layers = <0>;
        };
        
        combo_page_down{
            timeout-ms = <50>;
            key-positions = <48 49>;
            bindings = <&kp PAGE_DOWN>;
            layers = <0>;
        };
        
        combo_home{
            timeout-ms = <50>;
            key-positions = <38 47>;
            bindings = <&kp HOME>;
            layers = <0>;
        };

        combo_end{
            timeout-ms = <50>;
            key-positions = <47 48>;
            bindings = <&kp END>;
            layers = <0>;
        };

        combo_ow{
            timeout-ms = <50>;
            key-positions = <5 9>;
            bindings = <&to 3>;
            layers = <0>;
        };

        combo_system{
            timeout-ms = <50>;
            key-positions = <45 49>;
            bindings = <&mo 4>;
            layers = <0>;
        };

    };

    keymap
    {
        compatible = "zmk,keymap";

        

        default_layer
        {
            bindings = <
                &kp N1      &kp N2          &kp N3          &kp N4      &kp N5          &kp N6          &kp N7              &kp N8      &kp N9      &kp N0 
                &kp Q       &kp W           &kp E           &kp R       &kp T           &kp Y           &kp U               &kp I       &kp O       &kp P 
                &kp A       &kp S           &kp D           &kp F       &kp G           &kp H           &kp J               &kp K       &kp L       &kp SEMICOLON 
                &kp Z       &kp X           &kp C           &kp V       &kp B           &kp N           &kp M               &kp DOT     &kp UP      &kp SLASH 
                &kp LCTRL   &kp LEFT_GUI    &kp LEFT_ALT    &kp LSHIFT  &lt 2 SPACE     &lt 1 SPACE     &kp LEFT_BRACKET    &kp LEFT    &kp DOWN    &kp RIGHT>;
        };

        number_layer
        {
            bindings = <
                &kp F1  &kp F2  &kp F3      &kp F4          &kp F5        &kp F6  &kp F7            &kp F8                 &kp F9              &kp F10
                &kp N1  &kp N1  &kp N1      &kp N1          &kp N1        &kp N1  &kp N1            &kp N1                 &kp F11             &kp F12
                &kp N1  &kp N1  &kp N1      &kp N1          &kp N1        &kp N1  &kp N1            &kp N1                 &kp N1              &kp SINGLE_QUOTE
                &kp N1  &kp N1  &kp N1      &kp N1          &kp N1        &kp N1  &kp RIGHT_BRACKET &kp BACKSLASH          &kp N1              &kp N1
                &kp N1  &kp N1  &kp N1      &kp N1          &kp N1        &kp N1  &kp PIPE          &kp N1                 &kp N1              &kp N1>;
        };
         
        keypad_layer
        {
            bindings = <
                &kp N1  &kp N2          &kp N3  &kp N4    &kp N5      &kp N6     &kp N7       &kp N8      &kp N9        &kp N0 
                &kp N2  &kp N2          &kp N2  &kp N2    &kp N2      &kp KP_N7  &kp KP_N8    &kp KP_N9   &kp KP_PLUS   &kp KP_MULTIPLY 
                &kp N2  &kp N2          &kp N2  &kp N2    &kp N2      &kp KP_N4  &kp KP_N5    &kp KP_N6   &kp KP_MINUS  &kp KP_DIVIDE 
                &kp N2  &kp N2          &kp N2  &kp N2    &kp N2      &kp KP_N1  &kp KP_N2    &kp KP_N3   &kp UP        &kp LS(MINUS) 
                &kp N2  &kp N2          &kp N2  &kp N2    &kp N2      &kp KP_N0  &kp KP_DOT   &kp LEFT    &kp DOWN      &kp RIGHT>;
        };

        ow_layer
        {
            bindings = <
                &kp N1      &kp N2          &kp N3          &kp N4      &kp N5          &kp N6      &kp N7          &kp N8      &kp N9      &kp N0
                &kp ESC     &kp Q           &kp W           &kp E       &kp R           &kp Y       &kp U           &kp I       &kp O       &kp P 
                &kp TAB     &kp A           &kp S           &kp D       &kp F           &kp H       &kp J           &kp K       &kp L       &kp COLON 
                &kp LSHIFT  &kp Z           &kp X           &kp C       &kp V           &kp N       &kp M           &kp COMMA   &kp DOT     &kp SLASH 
                &kp LCTRL   &kp LEFT_ALT    &kp LEFT_GUI    &kp LSHIFT  &kp SPACE       &kp RETURN  &to 0           &kp TAB     &kp RCTRL   &kp BACKSPACE>;
        };
        
        system_layer
        {
            bindings = <
                &bt BT_PRV  &bt BT_NXT &bt BT_SEL 0  &kp N4 &kp N4                      &kp N4      &kp N4    &kp N4   &kp N4   &kp N4 
                &kp N4      &kp N4    &kp N4    &kp N4     &kp N4                       &kp N4      &kp N4    &kp N4   &kp N4   &kp N4 
                &kp N4      &kp N4    &kp N4    &kp N4     &kp N4                       &kp N4      &kp N4    &kp N4   &kp N4   &kp N4 
                &kp N4      &kp N4    &kp N4    &kp N4     &kp N4                       &kp N4      &kp N4    &kp N4   &kp N4   &kp N4 
                &bt BT_CLR  &kp N4    &kp N4    &kp N4     &bootloader                  &kp N4      &kp N4    &kp N4   &kp N4   &kp N4>;
        };

        
    };
};
